class Solution{
public:

int binarysearch(vector<int>v ,int low , int high)
{
    int res=-1;
    while(low<=high)
    {
        int mid = low+(high-low)/2;
        if(v[mid]==1)
        {
            // if(v[mid-1]==1)
            // high=mid-1;
            // else
            // return mid;
            high=mid-1;
            res=mid;
        }
        else if(v[mid]==0)
        low=mid+1;
        // else if(mid+1<=high && v[mid]==0)
        // {
        //     if(v[mid+1]==0)
        //      low=mid+1;
        //      else
        //      return mid+1;
            
        // }
        // else 
        //       return high+1;
    }
    if(res==-1)
    return -1;
    else
    return res;
}
	int rowWithMax1s(vector<vector<int> > arr, int n, int m) {
	    // code here
	    int res=0 , max=0 , ans=-1;
	    for(int i=0;i<n;i++)
	    {
	        res = binarysearch(arr[i],0,m-1);
	 
	 if(res==-1)
	 continue;
	        else if(m-res>max)
	        {
	        max = m-res;
	        ans=i;
	        }
	    }
	    return ans;
	}

};
